Email for admin: admin@gmail.com 
Password for admin: Abc!123Abc

Components
NavbarMaterialUI 
o	not logIn: Links on Nav Bar: Home, About, Search, Dark Mode Login, Registration 
o	logIn not Busyness: Links on Nav Bar: Home, About, , Favorites Cards, Search, Dark Mode, Icon
o	logIn Busyness: Links on Nav Bar: About, Favorites Cards, My Cards, Search, Dark Mode, Icon
o	logIn Admine: Links on Nav Bar: About, Favorites Cards, My Cards, CRM, Search, Dark Mode , Icon

o	Home – link to component Home
o	About -  link to component About
o	Login – link to component Login
o	Registration – link to component Registration
o	Icon – drop down (bonus?) – add update Profile
o	Favorites Cards link to component FavCards
o	My Cards link to component Login MyCards
o	CRM link to component CRM
o	Search – input влияет на Home (in data from useAPI)  
o	Logout (in Icon) – reset User

 
Home:
•	All cards from API depend on search 
•	How much cards – API?
•	Each Card – 
    o	not logIn: phone
    o	logIn not Busyness: phone , like
    o	logIn Busyness: phone, like 
    o	logIn Admine: phone, like, delete
•	Each Card – link to component CardView
•	Phone – show div with telephone
•	Like – change color and save API??
•	Delete – delete card

CardView:
•	call API with more details API
•	details of busyness with google maps
 
CardNew
- title: New Card
- form to create Card
- check validation 
    o	successful – 
    o	 error – 
- check submit PUSH
    o	successful – 
    o	 error – 

Edit Card
- title: Edit Card
- form to create Card with details from API of card
•	- check validation 
    o	successful – 
    o	 error – 
- check submit PUT
    o	successful – 
    o	 error – 

About – page static

Fav Cards:
•	Title
•	List of cards from API with key: ”favorite cards”
•	Card: copy card UI from Home
buttons: 
    like – button that remove from favorites
    phone - 
    delete - only your cards

My Cards 
•	Title
•	List my cards from API with key: ”my cards”
•	Card: copy card UI from Home
o	buttons: 
    like – button that remove from favorites
    phone - 
    edit – link to Card Edit
    delete – delete from API
•	button “New Card” – link New Card

Login: 
*  title
•	Form to login 
- check validation 
    o	successful – 
    o	 error – 
- check submit PUT
    o	successful – 
    o	 error – 
* token and his decode to lockalStorage

Registration
*  title
•	Form to registration  
- check validation 
    o	successful – 
    o	 error – 
- check submit PUT
    o	successful – 
    o	 error –

Footer:
not logIn: About
logIn not Busyness: About, Favorites Cards
logIn Busyness: Links on Nav Bar: About, Favorites Cards, My Cards
logIn Admine: Links on Nav Bar: About, Favorites Cards, My Cards 


CRM :

* title
•	table users with status: 
o	id
o	name
o	bus/notbus
o	button – change status
o	button delete user



technology�s:
bootstrap - Home
MUI
HTML + CSS
useState 
useEffect
useForm Controller
useMemo - DarkTheme
Router 
REDUX (STORE PROVIDER SLICE)
npm install jwt-decode
useSelector
axios
useCallback
custom hook useAPI, useTheme
useDispatch
useParams



Introduction
This project is a comprehensive Card Management System designed for business use, providing various functionalities based on user roles (visitor, regular user, business user, admin). The application allows users to manage business cards, view detailed card information, and perform CRUD operations. Admins have additional capabilities, such as managing users and changing user statuses.

Features
User authentication and role-based access control
Create, view, edit, and delete business cards
All pages support search function (Home, MyCards, FavCards, CRM)
Like and favorite cards
Admin management of users
Errors depend on dynamic API responses.

Installation
This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).
Clone the repository:
git clone https://github.com/your-username/crm-card-management.git
Navigate to the project directory:
cd crm-card-management
Install dependencies:
npm install
Start the development server:
npm start

Components
NavbarMaterialUI
Not Logged In: Home, About, Search, Dark Mode, Login, Registration
Logged In (Regular User): Home, About, Favorites Cards, Search, Dark Mode, Profile Icon
Logged In (Business User): About, Favorites Cards, My Cards, Search, Dark Mode, Profile Icon
Logged In (Admin): About, Favorites Cards, My Cards, CRM, Search, Dark Mode, Profile Icon

Home
Displays all cards from API based on search criteria.
Card actions:
Not logged in: View phone.
Logged in (Regular User): View phone, like card.
Logged in (Business User): View phone, like card.
Logged in (Admin): View phone, like card, delete card.

CardView
Displays detailed information about a card.

CardNew
Form to create a new card.
Validation and submission handling.

CardEdit
Form to edit an existing card.
Pre-fills form with card details fetched from API.
Validation and submission handling.

About
Static information about the application.

FavCards
Displays a list of favorite cards.
Card actions: like (remove from favorites), view phone, delete (only own cards).

MyCards
Displays a list of user-created cards.
Card actions: like (remove from favorites), view phone, edit card, delete card.
Button to create a new card.

Login
Form to log in.
Validation and submission handling.
Stores token in localStorage.

Registration
Form to register a new account.
Validation and submission handling.

Footer
Not Logged In: About
Logged In (Regular User): About, Favorites Cards
Logged In (Business User): About, Favorites Cards, My Cards
Logged In (Admin): About, Favorites Cards, My Cards

CRM
Admin functionality to manage users.
Displays a table of users with columns for ID, name, status (business/regular), and actions (change status, delete user).
Confirm deletion with a modal popup.

Dark Mode
Toggle switch to enable dark mode using useTheme custom hook
Search
Search bar that filters cards displayed on the Home page

Technologies Used
Bootstrap
Material-UI (MUI)
HTML & CSS
React (useState, useEffect, useMemo, useCallback, useParams)
React Router
Redux (store, provider, slice, useSelector, useDispatch)
Axios
JWT Decode
Custom hooks (useAPI, useTheme)
React Hook Form (useForm, Controller)
